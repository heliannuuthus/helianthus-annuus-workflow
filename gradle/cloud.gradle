buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.1.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.0.1"

    }
}
plugins {
    id "com.diffplug.spotless" version "6.12.0"
    id "io.freefair.lombok" version "6.6.1"
}

apply plugin: "java"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
ext {
    r2dbcConnCompVersion = "2.1.8"
    r2dbcSpiVersion = "1.0.0.RELEASE"
    r2dbcPoolVersion = "1.0.0.RELEASE"
    joseVersion = "0.9.2"
    log4j2Version = "2.19.0"
    guavaVersion = "31.1-jre"
    hutoolVersion = "5.8.10"
    springDocVersion = "2.0.2"
    bootVersion = "3.0.1"
    cloudVersion = "2022.0.0"
    alibabaCloudVersion = "2022.0.0.0-RC1"
    helianthusCommonVersion = "0.0.1"
    spotlessVersion = "1.15.0"
}

allprojects {

    group "com.heliannuuthus"

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"
        implementation "org.springframework.boot:spring-boot-starter-validation"
        developmentOnly "org.springframework.boot:spring-boot-devtools"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        testImplementation "io.projectreactor:reactor-test"

        // apollo
        implementation "io.github.heliannuuthus:helianthus-annuus-apollo-client:${helianthusCommonVersion}"

        // spring cloud
        implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery"


        // utils
        implementation "com.google.guava:guava:${guavaVersion}"
        implementation "cn.hutool:hutool-core:${hutoolVersion}"

        // 数据库连接
        implementation "com.github.jasync-sql:jasync-r2dbc-mysql:${r2dbcConnCompVersion}"
        implementation "io.r2dbc:r2dbc-spi:${r2dbcSpiVersion}"
        implementation "io.r2dbc:r2dbc-pool:${r2dbcPoolVersion}"
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${bootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${cloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${alibabaCloudVersion}"
        }
    }
    spotless {
        java {
            googleJavaFormat("${spotlessVersion}").groupArtifact("com.google.googlejavaformat:google-java-format")
        }
    }

    tasks.named("test") {
        useJUnitPlatform()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        all*.exclude module : 'spring-boot-starter-logging'
    }


    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/jcenter" }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/heliannuuthus/${project.name}"
            credentials {
                username = rootProject.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = rootProject.findProperty("gpr.token") ?: System.getenv("GPR_TOKEN")
            }
        }
        mavenCentral()
    }

}

